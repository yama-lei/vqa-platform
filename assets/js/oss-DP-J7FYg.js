import{a0 as f}from"./vendor-BY3fWaHA.js";console.log("环境变量检查:",{API_KEY:"未设置"});const m="https://api.yama-lei.top/api/oss/config",w="lIlI****";console.log("API配置:",{endpoint:m,apiKey:"已设置"});const y=async()=>{try{console.log("正在请求OSS配置...");const e=await fetch(m,{method:"POST",headers:{"Content-Type":"application/json","x-api-key":w}});if(console.log("API响应状态:",e.status,e.statusText),!e.ok){const c=await e.text();throw console.error("API响应错误:",{status:e.status,statusText:e.statusText,body:c}),new Error(`获取OSS配置失败: HTTP ${e.status}`)}const o=await e.json();if(console.log("API响应数据:",o),!o.success)throw new Error(o.error||"获取OSS配置失败");return{region:o.data.region,bucket:o.data.bucket,accessKeyId:o.data.accessKeyId,accessKeySecret:o.data.accessKeySecret,secure:!0}}catch(e){throw console.error("获取OSS配置失败:",e),e}},p=async()=>{const e=await y();return new f(e)},g=async(e,o="get",c=3600)=>{try{const n=await p();console.log("原始objectName:",e);let t=e;if(t.startsWith("/")&&(t=t.slice(1)),!["paper/","code/","note/","video/"].some(i=>t.startsWith(i))){const i=t.split(".").pop().toLowerCase();let l="other/";i==="pdf"?l="paper/":["jpg","jpeg","png","gif","svg","webp"].includes(i)?l="note/":["mp4","webm","ogg"].includes(i)?l="video/":["js","py","java","cpp","c","h","html","css"].includes(i)&&(l="code/"),t=l+t}console.log("标准化后的objectName:",t);const a=t.split(".").pop().toLowerCase();console.log("文件扩展名:",a);const s={expires:c,method:o.toUpperCase(),"response-content-disposition":"inline","response-content-type":h(t),"response-cache-control":"no-cache","response-cors-allow-origin":"*","response-cors-allow-methods":"GET, HEAD, OPTIONS","response-cors-allow-headers":"*","response-cors-expose-headers":"ETag, Content-Length","response-content-security-policy":"default-src 'self' 'unsafe-inline' 'unsafe-eval' data: blob:; frame-ancestors 'self' *"};a==="pdf"&&(s["response-content-type"]="application/pdf",s["response-content-disposition"]='inline; filename="'+encodeURIComponent(t.split("/").pop())+'"',s["response-content-encoding"]="identity"),["doc","docx","xls","xlsx","ppt","pptx"].includes(a)&&(s["response-content-type"]="application/octet-stream",s["response-content-disposition"]='inline; filename="'+encodeURIComponent(t.split("/").pop())+'"',s["response-content-encoding"]="identity"),["jpg","jpeg","png","gif","svg","webp"].includes(a)&&(s["response-content-type"]=`image/${a}`,s["response-content-disposition"]="inline",s["response-cache-control"]="public, max-age=31536000"),["mp4","webm","ogg"].includes(a)&&(s["response-content-type"]=`video/${a}`,s["response-content-disposition"]="inline",s["response-cache-control"]="public, max-age=31536000"),a==="md"&&(s["response-content-type"]="text/markdown",s["response-content-disposition"]="inline"),a==="txt"&&(s["response-content-type"]="text/plain",s["response-content-disposition"]="inline"),console.log("生成签名URL的选项:",s);const u=n.signatureUrl(t,s).replace("http://","https://");return console.log(`生成${o}签名URL成功:`,u),u}catch(n){throw console.error("生成签名URL失败:",n),console.error("错误详情:",{message:n.message,code:n.code,requestId:n.requestId,objectName:e}),n}},I=async(e,o="")=>{try{const c=await p(),n=o||"other";console.log("使用目录:",n);const t=`${n}/${e.name}`;console.log("生成的对象名称:",t);const d=await c.put(t,e);console.log("文件上传成功:",d);const r=await g(t);return console.log("生成访问URL:",r),{success:!0,url:r,objectName:t,type:n}}catch(c){throw console.error("文件上传失败:",c),c}},h=e=>{switch(e.split(".").pop().toLowerCase()){case"pdf":return"application/pdf";case"doc":case"docx":return"application/msword";case"xls":case"xlsx":return"application/vnd.ms-excel";case"ppt":case"pptx":return"application/vnd.ms-powerpoint";case"jpg":case"jpeg":return"image/jpeg";case"png":return"image/png";case"gif":return"image/gif";case"svg":return"image/svg+xml";case"webp":return"image/webp";case"mp4":return"video/mp4";case"webm":return"video/webm";case"ogg":return"video/ogg";case"md":return"text/markdown";case"txt":return"text/plain";default:return"application/octet-stream"}},b=async(e="",o=100)=>{try{const c=await p();console.log("正在获取目录列表:",e);const n=e?[e]:["paper/","code/","note/","video/","other/"];let t=[];for(const r of n){console.log("正在获取目录:",r);const a=await c.list({prefix:r,"max-keys":o});a.objects&&(console.log(`目录 ${r} 中的文件:`,a.objects.map(s=>s.name)),t=t.concat(a.objects))}return console.log("获取到的所有文件列表:",t.map(r=>r.name)),await Promise.all(t.map(async r=>({name:r.name.split("/").pop(),url:await g(r.name),objectName:r.name,size:r.size,lastModified:r.lastModified,type:r.name.split("/")[0]})))}catch(c){throw console.error("获取文件列表失败:",c),console.error("错误详情:",{message:c.message,code:c.code,requestId:c.requestId,directory:e}),c}},P=async e=>{try{return await(await p()).delete(e),!0}catch(o){throw console.error("删除文件失败:",o),o}},v=(e,o)=>{const c=g(e),n=document.createElement("a");n.href=c,n.download=o||e.split("/").pop(),document.body.appendChild(n),n.click(),document.body.removeChild(n)},O=async()=>{try{console.log("开始测试OSS连接...");const o=await(await p()).list({"max-keys":1});return console.log("OSS连接成功"),!0}catch(e){throw console.error("OSS连接测试失败:",e),e}};export{P as a,v as d,b as l,O as t,I as u};
